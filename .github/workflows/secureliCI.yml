# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: secureliCI

on:
  push:
    branches:
      - main
      - feature/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install

    # - run: |
    #     poetry install
    #     # poetry run poe precommit
    #     poetry run poe coverage
    #     poetry run poe secureli yeti

  Release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/feature/stft-133-semantic'
    # && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release

    steps:
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.9
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Semantic Release
      #   run: |
      #     pip install python-semantic-release
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     semantic-release publish -v DEBUG
