# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: secureliCI

on:
  push:
    branches:
      - main
      - feature/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Checkout Secureli Homebrew Repo
      uses: actions/checkout@v3
      with:
        repository: slalombuild/homebrew-secureli
        token: ${{ secrets.ADMIN_TOKEN_SASCHA }} # `GH_PAT` is a secret that contains your PAT
        path: homebrew-secureli
    - name: Validate Branch name
      run: ./scripts/get-current-branch.sh
    - name: Set up Python 3.9
      id: setup-python
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Set Up Project
      run: |
        pip install poetry
        poetry install
    - name: Run Tests
      run: |
        poetry run poe precommit
        poetry run poe coverage
        poetry run secureli yeti
    - name: Semantic Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        export GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
        pip install python-semantic-release
        git config user.name github-actions
        git config user.email github-actions@github.com
        semantic-release publish
        # A NOOP run on feature branches
    - name: Verify Semantic Release
      if: github.ref != 'refs/heads/main'
      run: |
        export GH_TOKEN=${{ secrets.ADMIN_TOKEN_SASCHA }}
        pip install python-semantic-release
        git config user.name github-actions
        git config user.email github-actions@github.com
        semantic-release publish --noop

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
    - name: Checkout Secureli Homebrew Repo
      uses: actions/checkout@v3
      with:
        repository: slalombuild/homebrew-secureli
        token: ${{ secrets.ADMIN_TOKEN_SASCHA }} # `GH_PAT` is a secret that contains your PAT
        path: homebrew-secureli
    - name: Homebrew Formula Generation
      env:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN_SASCHA }}
      run: |
        pip install requests jinja2 poetry python-semantic-release
        poetry install
        poetry build
        export secureliVersion=$(semantic-release print-version --current)
        export secureliSha256=$(sha256sum dist/secureli-${secureliVersion}.tar.gz | awk '{print $1}')
        echo $secureliVersion
        # git config --global user.email "secureli-automation@slalom.com"
        # git config --global user.name "Secureli Automation"
        # python ./scripts/get-secureli-dependencies.py
        # cd homebrew-secureli
        # git checkout -b "secureli-${secureliVersion}-formula-generation"
        # git add ./Formula/secureli.rb
        # git commit -m "Creating pull request with latest Secureli formula for version ${secureliVersion}"
        # git push origin secureli-${secureliVersion}-formula-generation --repo https://github.com/slalombuild/homebrew-secureli.git
        # gh pr create --title "Secureli Formula Automated Creation for version ${secureliVersion}" --body "Automated formula creation"
