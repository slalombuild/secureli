# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: secureliCI

on:
  push:
    branches:
      - main
      - feature/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.ADMIN_TOKEN_SASCHA }}
    - name: Checkout Secureli Homebrew Repo
      uses: actions/checkout@v3
      with:
        repository: slalombuild/homebrew-secureli
        token: ${{ secrets.ADMIN_TOKEN_SASCHA }} # `GH_PAT` is a secret that contains your PAT
        path: homebrew-secureli
    - name: Validate Branch name
      run: ./scripts/get-current-branch.sh
    - name: Set up Python 3.9
      id: setup-python
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Set Up Project
      run: |
        pip install poetry
        poetry install
    - name: Run Tests
      run: |
        poetry run poe precommit
        poetry run poe coverage
        poetry run secureli build
    - name: Semantic Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        export GH_TOKEN=${{ secrets.ADMIN_TOKEN_SASCHA }}
        pip install python-semantic-release
        git config user.name github-actions
        git config user.email github-actions@github.com
        semantic-release publish
        # A NOOP run on feature branches
    - name: Verify Semantic Release
      if: github.ref != 'refs/heads/main'
      run: |
        export GH_TOKEN=${{ secrets.ADMIN_TOKEN_SASCHA }}
        pip install python-semantic-release
        git config user.name github-actions
        git config user.email github-actions@github.com
        semantic-release publish --noop

  secureli-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    - name: Checkout Secureli Repo
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
    - run: |
        pip install poetry
        poetry install
        poetry build
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1


  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
    - name: Checkout Secureli Homebrew Repo
      uses: actions/checkout@v3
      with:
        repository: slalombuild/homebrew-secureli
        token: ${{ secrets.ADMIN_TOKEN_SASCHA }} # `GH_PAT` is a secret that contains your PAT
        path: homebrew-secureli
        ref: main
        fetch-depth: 0
    - name: Homebrew Formula Generation
      env:
        GH_TOKEN: ${{ secrets.ADMIN_TOKEN_SASCHA }}
      run: ./scripts/secureli-deployment.sh
  test-osx:
    runs-on: macos-latest
    steps:
    - name: Set up Homebrew
      run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - name: Install GH
      run: brew install gh
    - name: Prep for python 3.11.3 install # Removes python 3.11.3 to avoid conflict with homebrew python
      run: |
        rm -rf '/usr/local/bin/2to3'
        rm -rf '/usr/local/bin/2to3-3.11'
        rm -rf '/usr/local/bin/idle3'
        rm -rf '/usr/local/bin/idle3.11'
        rm -rf '/usr/local/bin/pydoc3'
        rm -rf '/usr/local/bin/pydoc3.11'
        rm -rf '/usr/local/bin/python3'
        rm -rf '/usr/local/bin/python3-config'
        rm -rf '/usr/local/bin/python3.11'
        rm -rf '/usr/local/bin/python3.11-config'
    - name: Set up Secureli
      run: |
        brew tap slalombuild/secureli
        HOMEBREW_NO_AUTO_UPDATE=1 HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1 brew install secureli
      # env:
      #   HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.TAP_TOKEN }}
    - name: Checkout test repo
      uses: actions/checkout@v3
      with:
        repository: pypa/pip
        path: pip
    - name: Init Secureli
      run: cd pip && secureli init --yes && secureli scan
