[tool.poetry]
name = "secureli"
version = "0.3.4"
description = "Secure Project Manager"
authors = ["Caleb Tonn <caleb.tonn@slalom.com>"]
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.scripts]
secureli = "secureli.main:app"

[tool.poe.tasks]
coverage = ["test", { cmd = "coverage report" }]
docker-build-app = "docker build -t secureli . -f Dockerfile_secureli --progress=plain --no-cache"
docker-build-homebrew = "docker build -t homebrew . -f Dockerfile_homebrew --no-cache --progress=plain"
docker-build-pypi = "docker build -t pypi . -f Dockerfile_pypi --no-cache --progress=plain"
init = ["install", { cmd = "secureli init -y" }]
install = "poetry install"
lint = "black --check ."
precommit = "pre-commit run -a"
test = ["init", "lint", { cmd = "coverage run -m pytest" }]

[tool.poetry.dependencies]
python = "^3.9"
typer = {version = "^0.6.1", extras = ["all"]}
pygments = "^2.13.0"
dependency-injector = {version = "^4.40.0", extras = ["yaml"]}
pydantic = "^1.10.2"
jinja2 = "^3.1.2"
pathspec = "^0.10.1"
cfgv = "^3.3.1"
pre-commit = "^2.20.0"

[tool.pytest.ini_options]
addopts = "-p no:cacheprovider"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
pytest-mock = "^3.10.0"
coverage = "^6.5.0"
black = "^22.10.0"
identify = "^2.5.7"
poethepoet = "^0.16.4"
python-semantic-release = "^7.33.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
major_on_zero = true
branch = "main"
upload_to_PyPI = false
upload_to_release = true
upload_to_repository = false
prerelease = true
parser_angular_default_level_bump = "patch"
parser_angular_patch_types = "fix,perf,docs,chore,chore(release)"
build_command = "poetry build"
commit_message = "chore(release): Tag v{version} [skip ci]"
